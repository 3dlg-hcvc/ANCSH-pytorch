version: "1.0"

dataset_dir: ??? # path to datasets folder
project_dir: ???
result_dir: ??? # path to result folder

preprocess:
  input_dir: "${paths.dataset_dir}"
  output_dir: "${paths.result_dir}/preprocess"
  tmp_dir: "${paths.preprocess.output_dir}/tmp"

  stage1:
    input: paths # overwrite based on dataset selection at runtime
    tmp_output:
      folder_name: "stage1"
      input_files: "input_files.csv"
      rest_state_data: "rest_state.json"
      rest_state_mesh: "rest_state.ply"
      pcd_camera: "pcd_camera_%03d_%03d.ply"
      pcd_world: "pcd_world_%03d_%03d.ply"
      pcd_rest_state: "pcd_rest_state_%03d_%03d.ply"
    output:
      pcd_data: "stage1_pcd.h5"

  stage2:
    input:
      split_info: "path"
      pcd_data: "${paths.preprocess.stage1.output.pcd_data}"
    tmp_output:
      folder_name: "stage2"
      mesh_info: "mesh_info.json"
      pcd_camera: "pcd_camera_%03d_%03d.ply"
      pcd_npcs: "pcd_npcs_%03d_%03d.ply"
      pcd_naocs: "pcd_naocs_%03d_%03d.ply"
      pcd_npcs2camera: "pcd_npcs2camera_%03d_%03d.ply"
      pcd_heatmap_unitvec: "pcd_heatmap_unitvec_%03d_%03d.ply"
      pcd_joints_axis: "pcd_joints_axis_%03d_%03d.ply"
    output:
      split_info: "split_info.csv"
      train_data: "train.h5"
      val_data: "val.h5"
      test_data: "test.h5"


  output:
    train: "${paths.preprocess.result_dir}/train.h5"
    val: "${paths.preprocess.result_dir}/val.h5"
    test: "${paths.preprocess.result_dir}/test.h5"

train:
  output_dir: "${paths.project_dir}/train_output/${network.network_type}_${now:%Y-%m-%d}_${now:%H-%M-%S}"

test:
  output_dir: "${paths.project_dir}/test_output/${network.network_type}_${now:%Y-%m-%d}_${now:%H-%M-%S}"
    
optimize:
  output_dir: "${paths.project_dir}/optimize_output/combined_${now:%Y-%m-%d}_${now:%H-%M-%S}"

evaluate:
  output_dir: "${paths.project_dir}/evaluate_output/combined_${now:%Y-%m-%d}_${now:%H-%M-%S}"